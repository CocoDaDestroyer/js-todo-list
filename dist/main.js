(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),c=n(645),a=n.n(c)()(o());a.push([e.id,"#header{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color:green;\r\n    font-size: 50px;\r\n    border-bottom: groove;\r\n    border-width: 10px;\r\n    background-color: rgb(220,220,220);\r\n    position: relative;\r\n    top: -30px;\r\n    height:80px;\r\n}\r\n.leftDiv{\r\n    width:30%;\r\n    float:left;\r\n    margin-top: -60px;\r\n    min-height: 90vh;\r\n}\r\n#rightDiv{\r\n    width:70%;\r\n    float:right;\r\n    background-color: rgb(220,220,220);\r\n    margin-top: -60px;\r\n    flex:1;\r\n    min-height: 90vh;\r\n}\r\n.toDoHeader{\r\n    font-size: 50px;\r\n    background-color: green;\r\n    padding: 20px;\r\n    color:white;\r\n    height:40px;\r\n    margin:20px;\r\n    vertical-align: middle;\r\n}\r\n#createNewToDo{\r\n    width: 90vh;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    height:5vh;\r\n    font-size: 25px;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,eAAe;IACf,qBAAqB;IACrB,kBAAkB;IAClB,kCAAkC;IAClC,kBAAkB;IAClB,UAAU;IACV,WAAW;AACf;AACA;IACI,SAAS;IACT,UAAU;IACV,iBAAiB;IACjB,gBAAgB;AACpB;AACA;IACI,SAAS;IACT,WAAW;IACX,kCAAkC;IAClC,iBAAiB;IACjB,MAAM;IACN,gBAAgB;AACpB;AACA;IACI,eAAe;IACf,uBAAuB;IACvB,aAAa;IACb,WAAW;IACX,WAAW;IACX,WAAW;IACX,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,iBAAiB;IACjB,kBAAkB;IAClB,UAAU;IACV,eAAe;AACnB",sourcesContent:["#header{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color:green;\r\n    font-size: 50px;\r\n    border-bottom: groove;\r\n    border-width: 10px;\r\n    background-color: rgb(220,220,220);\r\n    position: relative;\r\n    top: -30px;\r\n    height:80px;\r\n}\r\n.leftDiv{\r\n    width:30%;\r\n    float:left;\r\n    margin-top: -60px;\r\n    min-height: 90vh;\r\n}\r\n#rightDiv{\r\n    width:70%;\r\n    float:right;\r\n    background-color: rgb(220,220,220);\r\n    margin-top: -60px;\r\n    flex:1;\r\n    min-height: 90vh;\r\n}\r\n.toDoHeader{\r\n    font-size: 50px;\r\n    background-color: green;\r\n    padding: 20px;\r\n    color:white;\r\n    height:40px;\r\n    margin:20px;\r\n    vertical-align: middle;\r\n}\r\n#createNewToDo{\r\n    width: 90vh;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    height:5vh;\r\n    font-size: 25px;\r\n}"],sourceRoot:""}]);const i=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(a[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&a[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var c={},a=[],i=0;i<e.length;i++){var l=e[i],s=r.base?l[0]+r.base:l[0],d=c[s]||0,u="".concat(s," ").concat(d);c[s]=d+1;var p=n(u),A={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=o(A,r);r.byIndex=i,t.splice(i,0,{identifier:u,updater:m,references:1})}a.push(u)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var c=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var l=r(e,o),s=0;s<c.length;s++){var d=n(c[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}c=l}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var c=t[r]={id:r,exports:{}};return e[r](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),c=n(569),a=n.n(c),i=n(565),l=n.n(i),s=n(216),d=n.n(s),u=n(589),p=n.n(u),A=n(426),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),t()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;class f{constructor(e,t,n,r){this.Title=e,this.Description=t,this.DueDate=n,this.Priority=r}}function h(e){let t=document.getElementById("Title").value,n=document.getElementById("Description").value,r=document.getElementById("DueDate").value,o=document.getElementById("Priority").value;if(""==t||""==n||""==o||""==r)return;document.getElementById("todo-form").reset();let c=new f(t,n,r,o);document.getElementById("add-todo-form").style.display="none",document.getElementById("createNewToDo").style.display="",e.push(c)}function g(e){const t=document.querySelector(".taskList"),n=document.querySelectorAll(".card");for(let e=0;e<n.length;e++)n[e].remove();let r=0;e.forEach((n=>{const o=document.createElement("div");o.classList.add("card"),t.appendChild(o);const c=document.createElement("button");c.classList.add("check-button"),c.dataset.linkedArray=r,o.appendChild(c),c.addEventListener("click",(function(){let t=c.dataset.linkedArray;e.splice(parseInt(t),1),o.remove(),g(e)}));for(let e in n){const t=document.createElement("p");t.textContent=`${e}: ${n[e]}`,o.appendChild(t)}r++}))}!function(){const e=document.querySelector(".defaultProjects"),t=document.createElement("div");t.classList.add("home");const n=document.createElement("h2");n.textContent="Home";const r=document.createElement("button");r.classList.add("projectBtn"),r.textContent="Today";const o=document.createElement("button");o.classList.add("projectBtn"),o.textContent="This Week",t.appendChild(n),t.appendChild(r),t.appendChild(o),e.appendChild(t)}(),document.querySelector("#createNewToDo").addEventListener("click",(function(){document.getElementById("add-todo-form").style.display="",document.getElementById("createNewToDo").style.display="none"})),document.querySelector("#createNewProject").addEventListener("click",(function(){document.getElementById("add-project-form").style.display="",document.getElementById("createNewProject").style.display="none"})),h();let v=[];v.push([],[]),function(e){let t=document.querySelector(".project-button"),n=document.querySelector("#createNewProject"),r=document.querySelector(".projectList");t.addEventListener("click",(function(){let o=document.querySelector("#Name").value;e.push([]);let c=document.createElement("button");document.getElementById("add-project-form").style.display="none",c.classList.add("projectBtn"),console.log(o),c.textContent=o,r.appendChild(c),t.style.display="none",n.style.display=""}))}(v);let y=0,C=document.querySelectorAll(".projectBtn"),I=document.querySelector(".toDoHeader");document.querySelector(".project-button").addEventListener("click",(function(){C=document.querySelectorAll(".projectBtn");for(let e=0;e<C.length;e++)C[e].addEventListener("click",(function(){y=e,g(v[y]),I.textContent=C[e].textContent}))}));for(let e=0;e<C.length;e++)C[e].addEventListener("click",(function(){y=e,console.log(C.length),g(v[y]),console.log(v.length),I.textContent=C[e].textContent}));document.querySelector(".submit-button").addEventListener("click",(function(){h(v[y]),console.log(v[0][0]),g(v[y])}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,